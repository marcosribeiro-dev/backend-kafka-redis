
services:
  api-desafio:
    platform: linux/amd64
    build: .
    container_name: api-desafio
    ports:
      - "8088:8080"
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - Kafka__BootstrapServers=kafka:9092
      - Redis__ConnectionString=redis:6379
    depends_on:
      kafka-init:
        condition: service_completed_successfully
      redis:
        condition: service_healthy

  kafka:
    platform: linux/amd64
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - '9092:9092'
    volumes:
      - kafka_data:/bitnami/kafka
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true

  kafka-init:
    platform: linux/amd64
    image: confluentinc/cp-kafka:7.6.1 
    container_name: kafka-init
    depends_on:
      - kafka
    command: >
      sh -c "
        echo 'Waiting kafka to be ready...' &&
        cub kafka-ready -b kafka:9092 1 60 &&
        echo 'Creating kafka topics' &&
        kafka-topics --create --if-not-exists --topic orders --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 &&
        echo 'Topic created successfully'
      "

  kafka-ui:
    platform: linux/amd64
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - kafka-init
    environment:
      KAFKA_CLUSTERS_0_NAME: local-kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

  redis:
    platform: linux/amd64
    image: bitnami/redis:latest
    container_name: redis
    ports:
      - '6379:6379'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  kafka_data:
